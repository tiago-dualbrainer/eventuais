# Generated by Django 5.0.13 on 2025-03-12 23:31

import django.db.models.deletion
import eventuais.crm.models
import mptt.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('color', models.CharField(blank=True, max_length=20, verbose_name='Color')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Account Name')),
                ('account_type', models.CharField(choices=[('customer', 'Customer'), ('partner', 'Partner'), ('vendor', 'Vendor'), ('prospect', 'Prospect'), ('competitor', 'Competitor'), ('other', 'Other')], default='customer', max_length=20, verbose_name='Account Type')),
                ('industry', models.CharField(blank=True, choices=[('technology', 'Technology'), ('finance', 'Finance'), ('healthcare', 'Healthcare'), ('education', 'Education'), ('manufacturing', 'Manufacturing'), ('retail', 'Retail'), ('entertainment', 'Entertainment'), ('other', 'Other')], max_length=20, null=True, verbose_name='Industry')),
                ('website', models.URLField(blank=True, verbose_name='Website')),
                ('phone', models.CharField(blank=True, max_length=30, verbose_name='Phone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('address_line1', models.CharField(blank=True, max_length=255, verbose_name='Address Line 1')),
                ('address_line2', models.CharField(blank=True, max_length=255, verbose_name='Address Line 2')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='State/Province')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='Postal Code')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Country')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('annual_revenue', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True, verbose_name='Annual Revenue')),
                ('employee_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='Number of Employees')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_accounts', to=settings.AUTH_USER_MODEL, verbose_name='Account Owner')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_accounts', to=settings.AUTH_USER_MODEL)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='crm.account', verbose_name='Parent Account')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.UUIDField()),
                ('activity_type', models.CharField(choices=[('call', 'Call'), ('email', 'Email'), ('meeting', 'Meeting'), ('task', 'Task'), ('note', 'Note'), ('other', 'Other')], max_length=20, verbose_name='Activity Type')),
                ('subject', models.CharField(max_length=255, verbose_name='Subject')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('start_date', models.DateTimeField(verbose_name='Start Date/Time')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='End Date/Time')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='Due Date')),
                ('completion_date', models.DateTimeField(blank=True, null=True, verbose_name='Completion Date')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Is Completed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_activities', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_activities', to=settings.AUTH_USER_MODEL)),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performed_activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('title', models.CharField(blank=True, max_length=100, verbose_name='Job Title')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=30, verbose_name='Phone')),
                ('mobile', models.CharField(blank=True, max_length=30, verbose_name='Mobile')),
                ('use_account_address', models.BooleanField(default=True, verbose_name='Use Account Address')),
                ('address_line1', models.CharField(blank=True, max_length=255, verbose_name='Address Line 1')),
                ('address_line2', models.CharField(blank=True, max_length=255, verbose_name='Address Line 2')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='State/Province')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='Postal Code')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Country')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('lead', 'Lead')], default='active', max_length=20, verbose_name='Status')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('email_opt_out', models.BooleanField(default=False, verbose_name='Email Opt-Out')),
                ('phone_opt_out', models.BooleanField(default=False, verbose_name='Phone Opt-Out')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contacts', to='crm.account')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_contacts', to=settings.AUTH_USER_MODEL, verbose_name='Contact Owner')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_contacts', to=settings.AUTH_USER_MODEL)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subordinates', to='crm.contact', verbose_name='Reports To')),
                ('tags', models.ManyToManyField(blank=True, related_name='contacts', to='crm.tag')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
            },
        ),
        migrations.AddField(
            model_name='account',
            name='primary_contact',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_for_accounts', to='crm.contact', verbose_name='Primary Contact'),
        ),
        migrations.CreateModel(
            name='CustomField',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Field Name')),
                ('field_type', models.CharField(choices=[('text', 'Text'), ('textarea', 'Text Area'), ('number', 'Number'), ('date', 'Date'), ('datetime', 'Date & Time'), ('boolean', 'Boolean'), ('select', 'Select'), ('multiselect', 'Multi-Select'), ('url', 'URL'), ('email', 'Email'), ('phone', 'Phone')], max_length=20, verbose_name='Field Type')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('choices', models.JSONField(blank=True, help_text='JSON array of choices for select fields', null=True, verbose_name='Choices')),
                ('is_required', models.BooleanField(default=False, verbose_name='Required')),
                ('default_value', models.TextField(blank=True, verbose_name='Default Value')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Model')),
            ],
            options={
                'verbose_name': 'Custom Field',
                'verbose_name_plural': 'Custom Fields',
                'unique_together': {('name', 'content_type')},
            },
        ),
        migrations.CreateModel(
            name='Opportunity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Opportunity Name')),
                ('stage', models.CharField(choices=[('prospecting', 'Prospecting'), ('qualification', 'Qualification'), ('needs_analysis', 'Needs Analysis'), ('value_proposition', 'Value Proposition'), ('decision_makers', 'Decision Makers'), ('proposal', 'Proposal'), ('negotiation', 'Negotiation'), ('closed_won', 'Closed Won'), ('closed_lost', 'Closed Lost')], default='prospecting', max_length=30, verbose_name='Stage')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True, verbose_name='Amount')),
                ('probability', models.PositiveSmallIntegerField(default=0, validators=[eventuais.crm.models.validate_probability_range], verbose_name='Probability (%)')),
                ('expected_close_date', models.DateField(verbose_name='Expected Close Date')),
                ('next_step', models.CharField(blank=True, max_length=255, verbose_name='Next Step')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opportunities', to='crm.account', verbose_name='Account')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_opportunities', to=settings.AUTH_USER_MODEL, verbose_name='Opportunity Owner')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_opportunities', to=settings.AUTH_USER_MODEL)),
                ('primary_contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='opportunities', to='crm.contact', verbose_name='Primary Contact')),
                ('tags', models.ManyToManyField(blank=True, related_name='opportunities', to='crm.tag')),
            ],
            options={
                'verbose_name': 'Opportunity',
                'verbose_name_plural': 'Opportunities',
                'ordering': ['-expected_close_date'],
            },
        ),
        migrations.AddField(
            model_name='account',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='accounts', to='crm.tag'),
        ),
        migrations.CreateModel(
            name='CustomFieldValue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.UUIDField()),
                ('value', models.TextField(blank=True, verbose_name='Value')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='crm.customfield', verbose_name='Custom Field')),
            ],
            options={
                'verbose_name': 'Custom Field Value',
                'verbose_name_plural': 'Custom Field Values',
                'unique_together': {('field', 'content_type', 'object_id')},
            },
        ),
        migrations.CreateModel(
            name='SocialProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.UUIDField()),
                ('platform', models.CharField(choices=[('linkedin', 'LinkedIn'), ('twitter', 'Twitter'), ('facebook', 'Facebook'), ('instagram', 'Instagram'), ('youtube', 'YouTube'), ('github', 'GitHub'), ('other', 'Other')], max_length=20, verbose_name='Platform')),
                ('url', models.URLField(verbose_name='Profile URL')),
                ('username', models.CharField(blank=True, max_length=100, verbose_name='Username')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Social Profile',
                'verbose_name_plural': 'Social Profiles',
                'unique_together': {('content_type', 'object_id', 'platform')},
            },
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['last_name', 'first_name'], name='crm_contact_last_na_cda0e5_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['email'], name='crm_contact_email_240305_idx'),
        ),
    ]
